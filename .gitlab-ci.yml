variables:
  SECURE_LOG_LEVEL: error
  COMPOSER_DEFAULT_OPTIONS: '--optimize-autoloader --no-scripts'

stages:
  - doc
  - build
  - test
  - deploy

build:
  image: devilbox/php-fpm:8.1-prod
  stage: build
  before_script:
    - apt-get update
    - apt-get install -y git
  script:
    - php composer.phar install ${COMPOSER_DEFAULT_OPTIONS}
    - cp .env.example .env
    - php artisan key:generate
  variables:
    APP_ENV: prod
  artifacts:
    paths:
      - vendor/
  allow_failure: false

phpcs:
  image: devilbox/php-fpm:8.1-prod
  stage: test
  script:
    # exclude side effects because phpcs doesnt manage enum well
    - php vendor/bin/phpcs ./app --standard=PSR2 --exclude=PSR1.Files.SideEffects --severity=error
  allow_failure: true

phpstan:
  image: devilbox/php-fpm:8.1-prod
  stage: test
  script:
    - php -d memory_limit=-1 vendor/bin/phpstan analyse app
  allow_failure: true

deploy_tkg:
  image: devilbox/php-fpm:8.1-prod
  stage: deploy
  script:
    # Add the private SSH key to the build environment
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY_TKG")
    - mkdir -p ~/.ssh
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - vendor/bin/envoy run app:deploy --on=tkg-production --branch="$CI_COMMIT_BRANCH"
  only:
    - master
  dependencies:
    - build
  when: on_success

agent:
  image: python:3.11-buster
  stage: doc
  before_script:
    - pip install -r doc/requirements.txt
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_DOC" > ~/.ssh/id_rsa
    - chmod -R 700 ~/.ssh
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -p 2206 -t rsa doc.cnsi-sd.fr >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    # Build doc
    - cd doc/user-doc && mkdocs build --strict --verbose
    # Delete previous prod version
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST -p $SSH_PORT "rm -f /var/www/doc.cnsi-sd.fr/crm/agent/*.*.*"
    # Deploy prod over SSH
    - scp -r -P $SSH_PORT doc/user-doc/site/* $SSH_USER@$SSH_HOST:/var/www/doc.cnsi-sd.fr/crm/agent/

admin:
  image: python:3.11-buster
  stage: doc
  before_script:
    - pip install -r doc/requirements.txt
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_DOC" > ~/.ssh/id_rsa
    - chmod -R 700 ~/.ssh
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -p 2206 -t rsa doc.cnsi-sd.fr >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    # Build doc
    - cd doc/user-doc && mkdocs build --strict --verbose
    # Delete previous prod version
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST -p $SSH_PORT "rm -f /var/www/doc.cnsi-sd.fr/crm/admin/*.*.*"
    # Deploy prod over SSH
    - scp -r -P $SSH_PORT doc/user-doc/site/* $SSH_USER@$SSH_HOST:/var/www/doc.cnsi-sd.fr/crm/admin/
